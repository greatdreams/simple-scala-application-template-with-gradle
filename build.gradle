import org.gradle.api.tasks.wrapper.Wrapper

// Apply the java plugin to add support for Java
apply plugin: 'java'
// Apply the scala plugin to add support for Scala
apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'distribution'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
}

def scalaVersion = '2.12.4'
def scalaTestVersion = '3.0.4'
def logbackVersion = '1.2.3'
def groovyVersion = '2.4.12'
def scalaGuiceVersion = '4.1.1'
def scalaCSVVersion = '1.3.5'
def scalaLoggingVersion = '3.7.2'

// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.scala-lang:scala-compiler:${scalaVersion}"
    compile "org.scala-lang:scala-library:${scalaVersion}"
    compile "org.scala-lang:scala-reflect:${scalaVersion}"
    compile "net.codingwell:scala-guice_2.12:${scalaGuiceVersion}"
    compile "com.github.tototoshi:scala-csv_2.12:${scalaCSVVersion}"
    compile "com.typesafe.scala-logging:scala-logging_2.12:${scalaLoggingVersion}"

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    testCompile "org.scalatest:scalatest_2.12:${scalaTestVersion}"
    testCompile "junit:junit:4.12"
}

group = 'com.greatdreams.kotlin'
version = '0.0.1'


mainClassName = "com.greatdreams.scala.Hello"
applicationDefaultJvmArgs = ["-Dgreeting.language=en"]

task wrapper(type: Wrapper) {
    gradleVersion = "4.4"
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version,
                'Main-Class': 'com.greatdreams.scala.Hello'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}